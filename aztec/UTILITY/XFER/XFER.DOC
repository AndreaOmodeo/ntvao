NAME

 xfer - file transfer utility

SYNOPSIS

 xfer [-r] [+abpr] srcfile [destfile]

DESCRIPTION

 xfer transfers a file from one machine to another over a serial link.
To do so, xfer must be run on each of the two machines and a cable
connected between the two serial ports. One machine is considered to
be the master and the other the slave, with the master telling the slave
what to do. Whether a machine is the master or slave is defined by
specifying or not specifying arguments, respectively, when its xfer is
started.

 srcfile is the name of the file that is to be sent, and destfile is the
name of the file that is to be received. if destfile isn't specified, it's
assumed to be the same as srcfile.


1.  Options

 The arguments to xfer are as follows:

 +a Specifies that the file being transferred is an ASCII
    text file. When this option is used, line endings are
    converted as necessary. For example, if the sending
    machine uses a carriage return-line feed combination
    to terminate a line of text, while the receiving
    machine uses a newline character for this, this
    translation will be made when the file is transferred.

 +b When a file is being transferred to ProDOS, +b
    specifies that on ProDOS the file type should be set to
    BIN. For more information, see below.

 +r When a file is being transferred to or from the
    Macintosh, +r specifies that on the Macintosh the
    file's resource fork is to be accessed.

 +p Specifies that a program is being transferred.

 -r Specifies that the file is to go from the slave to the
    master. If this option isn't used, the file is sent from
    the master to the slave.

 When the +a, +b, and +p options are used, the file is assumed to
contain arbitrary binary data.


2.  Machine-dependent Information

2.1  Information for Macintosh

 * Data is sent through Macintosh port A.

 * ASCII text is sent to or from a Macintosh using the +a option.
   This option causes line endings to be converted as described
   above. When data is sent to the Macintosh, the +a option also
   causes the Macintosh file's type and creator to be set to TEXT
   and Manx.

 * A program is sent to or read from a Macintosh using the +p
   option. When a program is received by the Macintosh, the +p
   option causes the type and creator fields of the Macintosh file
   to which the program is written to be set to AZTC and Manx.
   When a program is sent from the Macintosh, the +p option
   has no effect on the Macintosh (but it might, of course, have
   an effect on the other computer).

 * The +r option causes the resource fork of the specified
   Macintosh file to be accessed. If this option isn't specified,
   the Macintosh file's data fork will be accessed.

 * When data is sent to or read from a Macintosh without using
   the +a +p options, the Macintosh file's type and creator are
   set to TEXT and ????.

 * For example, to send ASCII text to the data fork of a
   Macintosh file, you would use the option +a. To send a
   program to the resource fork of a Macintosh file, you would
   use the options +pr.

2.2  Information for Apple //

 There are two versions of xfer for use on an Apple //, one which
runs under ProDOS in the SHELL environment, and one which runs
under DOS 3.3. In both cases, the Apple // serial card must be in slot
2 and must be compatible with the Super Serial card.

 The following paragraphs first discuss the special features of the
ProDOS version and then of the DOS 3.3 version.

2.2.1  ProDOS Information

 * The +a option is used to send ASCII text. When data sent
   using the +a option is received by an Apple //, line endings
   are converted as decribed above, the type of the file to which
   the received data is written is set to TXT, and the file's AUX
   TYPE field is set to 0.

 * To send to ProDOS a program that can only be executed in
   the SHELL environment, the +p option is used. In this case,
   the data, less the first four bytes (which contain control
   information), is written to a file of type PRG. The program's
   load address, which is in the data's first two bytes, is set in the
   file's AUX TYPE field. (Note: if the program's load address
   is 0x2000, the file's type is set to SYS instead of PRG).

 * To send to ProDOS a program that can be executed either
   inside or outside the SHELL environment, the +b option is
   used. In this case, the data, less its first four bytes (which
   contain control information), is written to a file of type BIN.
   The program's load address, which is in the data's first two
   bytes, is set in the file's AUX TYPE field. (Note: if the
   program's load address is 0x2000, the file's type is set to SYS
   instead of BIN).

 * To send arbitrary binary data (ie, data other than ASCII text
   and programs) to ProDOS, don't specify the +a, +p, or +b
   options. In this case, the type of the file to which the data is
   written is set to 0.

2.2.2  DOS 3.3 Information

 * The DOS 3.3 version of xfer can only be used in 'slave' mode.

 * When a file is sent to Apple // DOS 3.3, the type of the file is
   set to TXT if the +a option was specified; otherwise, the type
   is set to BIN.

2.3  Information for Commodore 64

 * When data is sent to a Comodore 64 using the +p option, the
   second two bytes of data are not placed in the Commodore file.

2.4  Information for Amiga

 * Data is sent through the serial port on the Amiga.


3.  Examples

 For all of the following examples, the slave machine's xfer is
started by typing

 xfer

In fact, the absence of arguments when starting xfer defines the
machine on which this xfer is started as being the slave machine.

 The following command, when executed on the master machine
transfers the file datafile from the master machine to the slave
machine. The file is assumed to contain arbitrary binary data, and no
translations or manipulations are done to it.

 xfer datafile

 The next command, when executed on the master machine,
transfers the source file test.c from the master machine to the slave
machine. The name of the file that's created on the slave machine is
also test.c.

 xfer +a test.c

 The next command, when executed on the master machine,
transfers a program from the master to the slave. The name of the file
on the master is test. On the slave, the program is placed in the /bin
directory in a file called tprog.

 xfer +p test /bin/tprog 

 The next command, when executed on the master machine,
transfers text from the file named test.out on the slave to the file
named output on the master.

 xfer -r +a test.out output


4.  Baud rate

 The default baud rate is 9600, but can be changed by recompiling
with the macro BAUD defined to the appropriate value.


5.  Source

 The source to the XFER program is provided with the package for
adaptation to different hardware configurations. Included in the
source are drivers for the Macintosh, Apple // Super Serial Card,
Amiga, IBM PC Asynchronous Communications Adapter, and the
Interfacer 4 from Godbout.

 xfer consists of a system-independent module, whose source is in
xfer.c, and a machine-dependent module. To generate a version of
xfer for a particular machine, compile xfer.c and the machine-
dependent module and link the two together.


6.  Problems

 When xfer is used between two machines whose speeds greatly
differ, you may need to put a timing delay in the faster machine's
xfer. To do this, rebuild the faster machine's xfer; when you compile
its xfer.c, specify a value for the DELAY macro using the compiler's
-D option. Begin with a value of 50 for DELAY, and work up from
there. For example,

 cc -DDELAY=50 xfer.c
